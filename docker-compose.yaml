version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: Golang-CICD-Workflow-Heroku-app
    ports:
      - '8080:8080'
    networks:
      - Golang-CICD-Workflow-Heroku-network
    environment:
      - PORT=8080
      - DB_SOURCE=postgresql://postgres:postgres@Golang-CICD-Workflow-Heroku-db:5432/simple_database?sslmode=disable
    depends_on:
      postgres:
        condition: service_healthy
      prometheus:
        condition: service_started
      alertmanager:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:14.3-alpine
    container_name: Golang-CICD-Workflow-Heroku-postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=simple_database
    networks:
      - Golang-CICD-Workflow-Heroku-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  prometheus:
    image: prom/prometheus
    container_name: Golang-CICD-Workflow-Heroku-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./.docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./.docker/prometheus/alerting.rules.yml:/etc/prometheus/alerting.rules.yml
      - prometheus-data:/prometheus
    networks:
      - Golang-CICD-Workflow-Heroku-network
    command: 
      - --web.enable-lifecycle
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      - alertmanager

  alertmanager:
    image: prom/alertmanager
    container_name: Golang-CICD-Workflow-Heroku-alertmanager
    ports:
    - "9093:9093"
    networks:
      - Golang-CICD-Workflow-Heroku-network
    volumes:
    - "./.docker/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml"

networks:
  Golang-CICD-Workflow-Heroku-network:
    driver: bridge

volumes:
  prometheus-data: